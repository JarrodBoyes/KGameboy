package com.percy.kgameboy.test

import com.percy.kgameboy.cpu.instructions.Instruction
import com.percy.kgameboy.utils.toHexString
import kotlin.system.exitProcess

class InstructionLengthTest {
    fun testInstructionLengths(instructions: Map<UByte, Instruction>) {
        for(key in expectedLengths.keys) {
            if (instructions[key]?.length != expectedLengths[key]) {
                println("Instruction ${toHexString(key)} has unexpected length")
                exitProcess(0)
            }
        }

        println("Instruction length check: Passed")
    }

    private val expectedLengths : Map<UByte, Int> = mapOf(
        0x00u.toUByte() to 1,
        0x01u.toUByte() to 3,
        0x02u.toUByte() to 1,
        0x03u.toUByte() to 1,
        0x04u.toUByte() to 1,
        0x05u.toUByte() to 1,
        0x06u.toUByte() to 2,
        0x07u.toUByte() to 1,
        0x08u.toUByte() to 3,
        0x09u.toUByte() to 1,
        0x0au.toUByte() to 1,
        0x0bu.toUByte() to 1,
        0x0cu.toUByte() to 1,
        0x0du.toUByte() to 1,
        0x0eu.toUByte() to 2,
        0x0fu.toUByte() to 1,
        0x11u.toUByte() to 3,
        0x12u.toUByte() to 1,
        0x13u.toUByte() to 1,
        0x14u.toUByte() to 1,
        0x16u.toUByte() to 2,
        0x17u.toUByte() to 1,
        0x18u.toUByte() to 2,
        0x19u.toUByte() to 1,
        0x1au.toUByte() to 1,
        0x1bu.toUByte() to 1,
        0x1cu.toUByte() to 1,
        0x1du.toUByte() to 1,
        0x1eu.toUByte() to 2,
        0x1fu.toUByte() to 1,
        0x20u.toUByte() to 2,
        0x21u.toUByte() to 3,
        0x22u.toUByte() to 1,
        0x23u.toUByte() to 1,
        0x24u.toUByte() to 1,
        0x25u.toUByte() to 1,
        0x26u.toUByte() to 2,
        0x27u.toUByte() to 1,
        0x28u.toUByte() to 2,
        0x29u.toUByte() to 1,
        0x2au.toUByte() to 1,
        0x2bu.toUByte() to 1,
        0x2cu.toUByte() to 1,
        0x2du.toUByte() to 1,
        0x2eu.toUByte() to 2,
        0x2fu.toUByte() to 1,
        0x30u.toUByte() to 2,
        0x31u.toUByte() to 3,
        0x32u.toUByte() to 1,
        0x33u.toUByte() to 1,
        0x34u.toUByte() to 1,
        0x35u.toUByte() to 1,
        0x36u.toUByte() to 2,
        0x37u.toUByte() to 1,
        0x38u.toUByte() to 2,
        0x39u.toUByte() to 1,
        0x3au.toUByte() to 1,
        0x3bu.toUByte() to 1,
        0x3cu.toUByte() to 1,
        0x3du.toUByte() to 1,
        0x3eu.toUByte() to 2,
        0x3fu.toUByte() to 1,
        0x40u.toUByte() to 1,
        0x41u.toUByte() to 1,
        0x42u.toUByte() to 1,
        0x43u.toUByte() to 1,
        0x44u.toUByte() to 1,
        0x45u.toUByte() to 1,
        0x46u.toUByte() to 1,
        0x47u.toUByte() to 1,
        0x48u.toUByte() to 1,
        0x49u.toUByte() to 1,
        0x4au.toUByte() to 1,
        0x4bu.toUByte() to 1,
        0x4cu.toUByte() to 1,
        0x4du.toUByte() to 1,
        0x4eu.toUByte() to 1,
        0x4fu.toUByte() to 1,
        0x50u.toUByte() to 1,
        0x51u.toUByte() to 1,
        0x52u.toUByte() to 1,
        0x53u.toUByte() to 1,
        0x54u.toUByte() to 1,
        0x55u.toUByte() to 1,
        0x56u.toUByte() to 1,
        0x57u.toUByte() to 1,
        0x58u.toUByte() to 1,
        0x59u.toUByte() to 1,
        0x5au.toUByte() to 1,
        0x5bu.toUByte() to 1,
        0x5cu.toUByte() to 1,
        0x5du.toUByte() to 1,
        0x5eu.toUByte() to 1,
        0x5fu.toUByte() to 1,
        0x60u.toUByte() to 1,
        0x61u.toUByte() to 1,
        0x62u.toUByte() to 1,
        0x63u.toUByte() to 1,
        0x64u.toUByte() to 1,
        0x65u.toUByte() to 1,
        0x66u.toUByte() to 1,
        0x67u.toUByte() to 1,
        0x68u.toUByte() to 1,
        0x69u.toUByte() to 1,
        0x6au.toUByte() to 1,
        0x6bu.toUByte() to 1,
        0x6cu.toUByte() to 1,
        0x6du.toUByte() to 1,
        0x6eu.toUByte() to 1,
        0x6fu.toUByte() to 1,
        0x70u.toUByte() to 1,
        0x71u.toUByte() to 1,
        0x72u.toUByte() to 1,
        0x73u.toUByte() to 1,
        0x74u.toUByte() to 1,
        0x75u.toUByte() to 1,
        0x76u.toUByte() to 1,
        0x77u.toUByte() to 1,
        0x78u.toUByte() to 1,
        0x79u.toUByte() to 1,
//        0x7au.toUByte() to LDrr(a, d, 0x7au),
//        0x7bu.toUByte() to LDrr(a, e, 0x7bu),
//        0x7cu.toUByte() to LDrr(a, h, 0x7cu),
//        0x7du.toUByte() to LDrr(a, l, 0x7du),
//        0x7eu.toUByte() to LDrahl(a, hl, bus, 0x7eu),
//        0x7fu.toUByte() to LDrr(a, a, 0x7fu),
//        0x80u.toUByte() to ADDr(a, b, flags,0x80u),
//        0x81u.toUByte() to ADDr(a, c, flags,0x81u),
//        0x82u.toUByte() to ADDr(a, d, flags,0x82u),
//        0x83u.toUByte() to ADDr(a, e, flags,0x83u),
//        0x84u.toUByte() to ADDr(a, h, flags,0x84u),
//        0x85u.toUByte() to ADDr(a, l, flags,0x85u),
//        0x86u.toUByte() to ADDahl(a, hl, flags, bus, 0x86u),
//        0x87u.toUByte() to ADDr(a, a, flags,0x87u),
//        0x88u.toUByte() to ADC(a, b, flags, 0x88u),
//        0x89u.toUByte() to ADC(a, c, flags, 0x89u),
//        0x8au.toUByte() to ADC(a, d, flags, 0x8au),
//        0x8bu.toUByte() to ADC(a, e, flags, 0x8bu),
//        0x8cu.toUByte() to ADC(a, h, flags, 0x8cu),
//        0x8du.toUByte() to ADC(a, l, flags, 0x8du),
//        0x8eu.toUByte() to ADCahl(a, hl, flags, bus, 0x8eu),
//        0x8fu.toUByte() to ADC(a, a, flags, 0x8fu),
//        0x90u.toUByte() to SUBr(a, b, flags,0x90u),
//        0x91u.toUByte() to SUBr(a, c, flags,0x91u),
//        0x92u.toUByte() to SUBr(a, d, flags,0x92u),
//        0x93u.toUByte() to SUBr(a, e, flags,0x93u),
//        0x94u.toUByte() to SUBr(a, h, flags,0x94u),
//        0x95u.toUByte() to SUBr(a, l, flags,0x95u),
//        0x96u.toUByte() to SUBahl(a, hl, flags, bus, 0x96u),
//        0x97u.toUByte() to SUBr(a, a, flags,0x97u),
//        0x98u.toUByte() to SBCr8(a, b, flags, 0x98u),
//        0x99u.toUByte() to SBCr8(a, c, flags, 0x99u),
//        0x9au.toUByte() to SBCr8(a, d, flags, 0x9au),
//        0x9bu.toUByte() to SBCr8(a, e, flags, 0x9bu),
//        0x9cu.toUByte() to SBCr8(a, h, flags, 0x9cu),
//        0x9du.toUByte() to SBCr8(a, l, flags, 0x9du),
//        0x9eu.toUByte() to SBCahl(a, hl, flags, bus, 0x9eu),
//        0x9fu.toUByte() to SBCr8(a, a, flags, 0x9fu),
//        0xa0u.toUByte() to ANDr(a, b, flags, 0xa0u),
//        0xa1u.toUByte() to ANDr(a, c, flags, 0xa1u),
//        0xa2u.toUByte() to ANDr(a, d, flags, 0xa2u),
//        0xa3u.toUByte() to ANDr(a, e, flags, 0xa3u),
//        0xa4u.toUByte() to ANDr(a, h, flags, 0xa4u),
//        0xa5u.toUByte() to ANDr(a, l, flags, 0xa5u),
//        0xa6u.toUByte() to ANDahl(a, hl, flags, bus, 0xa6u),
//        0xa7u.toUByte() to ANDr(a, a, flags, 0xa7u),
//        0xa8u.toUByte() to XORr(b, a, flags,0xa8u),
//        0xa9u.toUByte() to XORr(c, a, flags,0xa9u),
//        0xaau.toUByte() to XORr(d, a, flags,0xaau),
//        0xabu.toUByte() to XORr(e, a, flags,0xabu),
//        0xacu.toUByte() to XORr(h, a, flags,0xacu),
//        0xadu.toUByte() to XORr(l, a, flags,0xadu),
//        0xaeu.toUByte() to XORahl(hl, a, flags, bus, 0xaeu),
//        0xafu.toUByte() to XORr(a, a, flags,0xafu),
//        0xb0u.toUByte() to ORr(a, b, flags, 0xb0u),
//        0xb1u.toUByte() to ORr(a, c, flags, 0xb1u),
//        0xb2u.toUByte() to ORr(a, d, flags, 0xb2u),
//        0xb3u.toUByte() to ORr(a, e, flags, 0xb3u),
//        0xb4u.toUByte() to ORr(a, h, flags, 0xb4u),
//        0xb5u.toUByte() to ORr(a, l, flags, 0xb5u),
//        0xb6u.toUByte() to ORahl(a, hl, flags, bus,0xb6u),
//        0xb7u.toUByte() to ORr(a, a, flags, 0xb7u),
//        0xb8u.toUByte() to CPr(a, b, flags, 0xb8u),
//        0xb9u.toUByte() to CPr(a, c, flags, 0xb9u),
//        0xbau.toUByte() to CPr(a, d, flags, 0xbau),
//        0xbbu.toUByte() to CPr(a, e, flags, 0xbbu),
//        0xbcu.toUByte() to CPr(a, h, flags, 0xbcu),
//        0xbdu.toUByte() to CPr(a, l, flags, 0xbdu),
//        0xbeu.toUByte() to CPahl(a, hl, flags, bus, 0xbeu),
//        0xbfu.toUByte() to CPr(a, a, flags, 0xbfu),
        0xc0u.toUByte() to 1,
        0xc1u.toUByte() to 1,
        0xc2u.toUByte() to 3,
        0xc3u.toUByte() to 3,
        0xc4u.toUByte() to 3,
        0xc5u.toUByte() to 1,
        0xc6u.toUByte() to 2,
        0xc7u.toUByte() to 1,
        0xc8u.toUByte() to 1,
        0xc9u.toUByte() to 1,
        0xcau.toUByte() to 3,
        0xcbu.toUByte() to 2,
        0xccu.toUByte() to 3,
        0xcdu.toUByte() to 3,
        0xceu.toUByte() to 2,
        0xcfu.toUByte() to 1,
        0xd0u.toUByte() to 1,
        0xd1u.toUByte() to 1,
        0xd2u.toUByte() to 3,
        0xd4u.toUByte() to 3,
        0xd7u.toUByte() to 1,
        0xd8u.toUByte() to 1,
        0xd9u.toUByte() to 1,
        0xd5u.toUByte() to 1,
        0xd6u.toUByte() to 2,
        0xdau.toUByte() to 3,
        0xdcu.toUByte() to 3,
        0xdeu.toUByte() to 2,
        0xdfu.toUByte() to 1,
        0xe0u.toUByte() to 2,
        0xe1u.toUByte() to 1,
        0xe5u.toUByte() to 1,
        0xe6u.toUByte() to 2,
        0xe7u.toUByte() to 1,
        0xe2u.toUByte() to 1, // 2,   - This the table is incorrect
        0xe9u.toUByte() to 1,
        0xeau.toUByte() to 3,
        0xeeu.toUByte() to 2,
        0xefu.toUByte() to 1,
        0xf0u.toUByte() to 2,
        0xf1u.toUByte() to 1,
        0xf2u.toUByte() to 1, // 2,   - The table is incorrect
        0xf3u.toUByte() to 1,
        0xf5u.toUByte() to 1,
        0xf6u.toUByte() to 2,
        0xf7u.toUByte() to 1,
        0xf8u.toUByte() to 2,
        0xf9u.toUByte() to 1,
        0xfau.toUByte() to 3,
        0xfbu.toUByte() to 1,
        0xfeu.toUByte() to 2,
        0xffu.toUByte() to 1
    )
}